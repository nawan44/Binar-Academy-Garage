{"ast":null,"code":"import _classCallCheck from \"/home/nawan44/Dokumen/binar/garage/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nawan44/Dokumen/binar/garage/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/nawan44/Dokumen/binar/garage/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/nawan44/Dokumen/binar/garage/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/nawan44/Dokumen/binar/garage/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/nawan44/Dokumen/binar/garage/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/nawan44/Dokumen/binar/garage/src/components/Page/PageCkeEditor.jsx\";\nimport React, { Component } from 'react';\nimport { Form } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport CKEditor from 'ckeditor4-react';\nimport { Button } from 'mdbreact';\nimport axios from 'axios';\n\nvar PageCkeEditor =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PageCkeEditor, _Component);\n\n  function PageCkeEditor(props) {\n    var _this;\n\n    _classCallCheck(this, PageCkeEditor);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PageCkeEditor).call(this, props));\n    _this.updateContent = _this.updateContent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      content: 'content'\n    };\n    return _this;\n  }\n\n  _createClass(PageCkeEditor, [{\n    key: \"updateContent\",\n    value: function updateContent(newContent) {\n      this.setState({\n        content: newContent\n      });\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(evt) {\n      console.log(\"onChange fired with event info: \", evt);\n      var newContent = evt.editor.getData();\n      this.setState({\n        content: newContent\n      });\n    }\n  }, {\n    key: \"onBlur\",\n    value: function onBlur(evt) {\n      console.log(\"onBlur event called with event info: \", evt);\n    }\n  }, {\n    key: \"afterPaste\",\n    value: function afterPaste(evt) {\n      console.log(\"afterPaste event called with event info: \", evt);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(CKEditor, {\n        activeClass: \"p10\",\n        content: this.state.content,\n        events: {\n          \"blur\": this.onBlur,\n          \"afterPaste\": this.afterPaste,\n          \"change\": this.onChange\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return PageCkeEditor;\n}(Component); // import React, { Component } from 'react';\n// import { Form} from 'reactstrap';\n// import PropTypes from 'prop-types';\n// import CKEditor from 'ckeditor4-react';\n// import { Button } from 'mdbreact';\n// import axios from 'axios';\n// class PageCkeEditor extends Component {\n//     constructor( props ) {\n//         super( props );\n//         this.state = {\n//             data: '<p>React is really <em>nice</em>!</p>',\n//             products: []\n//         };\n//         this.updateData = this.updateData.bind(this)\n//         this.handleChange = this.handleChange.bind( this );\n//         this.onEditorChange = this.onEditorChange.bind( this );\n//     }\n//     onEditorChange( evt ) {\n//         this.setState( {\n//             data: evt.editor.getData()\n//         } );\n//     }\n//     handleTitleChange = event => {\n//         this.setState({ title: event.target.value })\n//     }\n//     handleChange( changeEvent ) {\n//         this.setState( {\n//             data: changeEvent.target.value\n//         } );\n//     }\n//     handleSubmit = event => {\n//         event.preventDefault();\n//         axios.post('http://reduxblog.herokuapp.com/api/posts?key=barangku',\n//         {\n//             title: this.state.title\n//         }\n//         )\n//             .then(res => {\n//                     alert('article was added')\n//                     this.updateData()\n//                 }\n//             )\n//       }\n//       updateData(){\n//         axios.get('http://reduxblog.herokuapp.com/api/posts?key=barangku')\n//         .then(res => {\n//             this.setState({\n//               products: res.data\n//             })\n//         });\n//       }\n//       componentDidMount(){\n//         axios.get('http://reduxblog.herokuapp.com/api/posts?key=barangku')\n//         .then(res => {\n//             this.setState({\n//               products: res.data\n//             })\n//         });\n//       }\n//     render() {\n//         return (\n//             <Form   onSubmit={this.handleSubmit}   >\n//                 <CKEditor\n//                     data={this.state.data}\n//                     onChange={this.onEditorChange} />\n//                     <label>\n//                         Change val:\n//                         <textarea defaultValue={this.state.data} onChange={this.handleChange} />\n//                     </label>\n//                     <EditorPreview data={this.state.data} />\n//                     <Button color='primary' type=\"submit\" > submit </Button>\n//                     </Form>\n//         );\n//     }\n// }\n// class EditorPreview extends Component {\n//     render() {\n//         return (\n//             <div className=\"editor-preview\">\n//                 <h2>Rendered content:</h2>\n//                 <div dangerouslySetInnerHTML={ { __html: this.props.data } }></div>\n//             </div>\n//         );\n//     }\n// }\n// EditorPreview.defaultProps = {\n//     data: ''\n// };\n// EditorPreview.propTypes = {\n//     data: PropTypes.string\n// };\n// export default PageCkeEditor;","map":{"version":3,"sources":["/home/nawan44/Dokumen/binar/garage/src/components/Page/PageCkeEditor.jsx"],"names":["React","Component","Form","PropTypes","CKEditor","Button","axios","PageCkeEditor","props","updateContent","bind","state","content","newContent","setState","evt","console","log","editor","getData","onBlur","afterPaste","onChange"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAoB,YAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEMC,a;;;;;AACF,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,uFAAMA,KAAN;AACA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBC,IAAnB,uDAArB;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAHe;AAMlB;;;;kCAEaC,U,EAAY;AACtB,WAAKC,QAAL,CAAc;AACVF,QAAAA,OAAO,EAAEC;AADC,OAAd;AAGH;;;6BAEQE,G,EAAI;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDF,GAAhD;AACA,UAAIF,UAAU,GAAGE,GAAG,CAACG,MAAJ,CAAWC,OAAX,EAAjB;AACA,WAAKL,QAAL,CAAc;AACZF,QAAAA,OAAO,EAAEC;AADG,OAAd;AAGD;;;2BAEME,G,EAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ,EAAqDF,GAArD;AACD;;;+BAEUA,G,EAAI;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ,EAAyDF,GAAzD;AACD;;;6BAEQ;AACL,aACI,oBAAC,QAAD;AACE,QAAA,WAAW,EAAC,KADd;AAEE,QAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWC,OAFtB;AAGE,QAAA,MAAM,EAAE;AACN,kBAAQ,KAAKQ,MADP;AAEN,wBAAc,KAAKC,UAFb;AAGN,oBAAU,KAAKC;AAHT,SAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAWH;;;;EA3CuBrB,S,GAiD5B;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA","sourcesContent":["import React, { Component } from 'react';\nimport { Form} from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport CKEditor from 'ckeditor4-react';\nimport { Button } from 'mdbreact';\nimport axios from 'axios';\n\nclass PageCkeEditor extends Component {\n    constructor(props) {\n        super(props);\n        this.updateContent = this.updateContent.bind(this);\n        this.state = {\n            content: 'content',\n        }\n    }\n\n    updateContent(newContent) {\n        this.setState({\n            content: newContent\n        })\n    }\n    \n    onChange(evt){\n      console.log(\"onChange fired with event info: \", evt);\n      var newContent = evt.editor.getData();\n      this.setState({\n        content: newContent\n      })\n    }\n    \n    onBlur(evt){\n      console.log(\"onBlur event called with event info: \", evt);\n    }\n    \n    afterPaste(evt){\n      console.log(\"afterPaste event called with event info: \", evt);\n    }\n\n    render() {\n        return (\n            <CKEditor \n              activeClass=\"p10\" \n              content={this.state.content} \n              events={{\n                \"blur\": this.onBlur,\n                \"afterPaste\": this.afterPaste,\n                \"change\": this.onChange\n              }}\n             />\n        )\n    }\n}\n\n\n\n\n// import React, { Component } from 'react';\n// import { Form} from 'reactstrap';\n// import PropTypes from 'prop-types';\n// import CKEditor from 'ckeditor4-react';\n// import { Button } from 'mdbreact';\n// import axios from 'axios';\n\n// class PageCkeEditor extends Component {\n\n//     constructor( props ) {\n//         super( props );\n\n//         this.state = {\n//             data: '<p>React is really <em>nice</em>!</p>',\n//             products: []\n//         };\n//         this.updateData = this.updateData.bind(this)\n//         this.handleChange = this.handleChange.bind( this );\n//         this.onEditorChange = this.onEditorChange.bind( this );\n//     }\n\n//     onEditorChange( evt ) {\n//         this.setState( {\n//             data: evt.editor.getData()\n//         } );\n//     }\n//     handleTitleChange = event => {\n//         this.setState({ title: event.target.value })\n//     }\n//     handleChange( changeEvent ) {\n//         this.setState( {\n//             data: changeEvent.target.value\n//         } );\n//     }\n\n\n//     handleSubmit = event => {\n//         event.preventDefault();\n//         axios.post('http://reduxblog.herokuapp.com/api/posts?key=barangku',\n//         {\n//             title: this.state.title\n//         }\n//         )\n//             .then(res => {\n//                     alert('article was added')\n//                     this.updateData()\n//                 }\n//             )\n//       }\n//       updateData(){\n//         axios.get('http://reduxblog.herokuapp.com/api/posts?key=barangku')\n//         .then(res => {\n//             this.setState({\n//               products: res.data\n//             })\n//         });\n//       }\n      \n//       componentDidMount(){\n//         axios.get('http://reduxblog.herokuapp.com/api/posts?key=barangku')\n//         .then(res => {\n//             this.setState({\n//               products: res.data\n//             })\n//         });\n//       }\n      \n//     render() {\n//         return (\n//             <Form   onSubmit={this.handleSubmit}   >\n//                 <CKEditor\n//                     data={this.state.data}\n//                     onChange={this.onEditorChange} />\n//                     <label>\n//                         Change val:\n//                         <textarea defaultValue={this.state.data} onChange={this.handleChange} />\n//                     </label>\n//                     <EditorPreview data={this.state.data} />\n//                     <Button color='primary' type=\"submit\" > submit </Button>\n\n//                     </Form>\n             \n//         );\n//     }\n// }\n\n// class EditorPreview extends Component {\n//     render() {\n//         return (\n//             <div className=\"editor-preview\">\n//                 <h2>Rendered content:</h2>\n//                 <div dangerouslySetInnerHTML={ { __html: this.props.data } }></div>\n//             </div>\n//         );\n//     }\n// }\n\n// EditorPreview.defaultProps = {\n//     data: ''\n// };\n\n// EditorPreview.propTypes = {\n//     data: PropTypes.string\n// };\n\n\n// export default PageCkeEditor;\n\n\n"]},"metadata":{},"sourceType":"module"}