{"ast":null,"code":"function e(e) {\n  return e && \"object\" == typeof e && \"default\" in e ? e.default : e;\n}\n\nvar r = e(require(\"react\")),\n    t = e(require(\"react-attr-converter\")),\n    n = e(require(\"parse5\")),\n    a = \"#text\",\n    o = \"#comment\";\n\nfunction i(e, t, n) {\n  if (e.nodeName === a || e.nodeName === o) return e.value || e.nodeValue;\n  var l = n.get(e.nodeName.toLowerCase()),\n      s = u(e.attrs || e.attributes, t),\n      c = l || e.tagName.toLowerCase();\n  if (0 === e.childNodes.length) return r.createElement(c, s);\n\n  for (var f = [], d = 0; d < e.childNodes.length; d++) {\n    f.push(i(e.childNodes[d], d, n));\n  }\n\n  return r.createElement(c, s, f);\n}\n\nfunction u(e, r) {\n  var n = {\n    key: r\n  };\n  if (!e) return n;\n\n  for (var a = 0; a < e.length; a++) {\n    var o = t(e[a].name);\n    n[o] = \"style\" === o ? (void 0, e[a].value.split(\";\").reduce(function (e, r) {\n      if (r) {\n        var t = r.split(\":\"),\n            n = t[0].trim(),\n            a = Array.from(n);\n        Array.from(n).forEach(function (e, r) {\n          \"-\" === e && (a[r + 1] = a[r + 1].toUpperCase(), a[r] = null);\n        }), e[a.join(\"\")] = t[1];\n      }\n\n      return e;\n    }, {})) : e[a].value;\n  }\n\n  return n;\n}\n\nfunction l(e) {\n  var r = new Map();\n  return {\n    convert: function convert(t) {\n      if (\"string\" != typeof t) return null;\n      var n = e.parseFragment(t);\n      return n.childNodes.length > 0 ? function (e, r) {\n        for (var t = [], n = 0; n < e.childNodes.length; n++) {\n          t.push(i(e.childNodes[n], n, r));\n        }\n\n        return 1 === t.length ? t[0] : t;\n      }(n, r) : null;\n    },\n    registerComponent: function registerComponent(e, t) {\n      r.set(e.toLowerCase(), t);\n    }\n  };\n}\n\nvar s = {\n  parseFragment: function parseFragment(e) {\n    return n.parseFragment(e);\n  },\n  serialize: function serialize(e) {\n    return n.serialize(e);\n  }\n};\nexports.ReactHTMLConverter = function () {\n  return l(s);\n}, exports.convertStatic = function (e) {\n  return function (e, t) {\n    if (\"string\" != typeof e) return null;\n    var n = t.parseFragment(e);\n\n    if (n.childNodes.length > 0) {\n      var a;\n\n      if (1 === n.childNodes.length) {\n        var o = n.childNodes[0];\n        a = r.createElement(o.nodeName.toLowerCase(), Object.assign({\n          dangerouslySetInnerHTML: {\n            __html: t.serialize(o)\n          }\n        }, u(o.attrs || o.attributes, 0)));\n      } else a = r.createElement(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: e\n        }\n      });\n\n      return a;\n    }\n\n    return null;\n  }(e, s);\n};","map":null,"metadata":{},"sourceType":"script"}