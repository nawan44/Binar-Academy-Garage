{"ast":null,"code":"var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _class, _temp2;\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nvar ReactHtml = (_temp2 = _class = function (_React$PureComponent) {\n  _inherits(ReactHtml, _React$PureComponent);\n\n  function ReactHtml() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ReactHtml);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args))), _this), _this.state = {\n      rendered: null,\n      isFirstRender: false\n    }, _this.renderDom = function () {\n      // exit early for server-side rendered applications\n      if (typeof window === 'undefined' || !_this.renderTarget) {\n        return;\n      }\n\n      var _this$props = _this.props,\n          html = _this$props.html,\n          componentMap = _this$props.componentMap,\n          componentAttribute = _this$props.componentAttribute,\n          propsAttribute = _this$props.propsAttribute; // render the html passed in props to the target element\n\n      if (document.createRange) {\n        // empty renderTarget before appending new fragment\n        while (_this.renderTarget.firstChild) {\n          _this.renderTarget.removeChild(_this.renderTarget.firstChild);\n        }\n\n        var range = document.createRange();\n        range.setStart(_this.renderTarget, 0);\n\n        _this.renderTarget.appendChild(range.createContextualFragment(html));\n      } else {\n        _this.renderTarget.innerHTML = html;\n      } // iterate over all elements that match our componentAttribute\n      // ie `<div data-react-component>`\n\n\n      var rendered = Array.from(_this.renderTarget.querySelectorAll('[' + componentAttribute + ']')).map(function (node) {\n        var component = componentMap[node.getAttribute(componentAttribute)];\n\n        var props = _this.parseStringProps(node.getAttribute(propsAttribute));\n\n        var element = React.createElement(component, props); // render the newly created element into the subtree\n\n        return ReactDOM.createPortal(element, node);\n      });\n\n      _this.setState({\n        rendered: rendered,\n        isFirstRender: true\n      });\n    }, _this.parseStringProps = function (componentProps) {\n      var _this$props2 = _this.props,\n          html = _this$props2.html,\n          componentMap = _this$props2.componentMap,\n          componentAttribute = _this$props2.componentAttribute,\n          propsAttribute = _this$props2.propsAttribute,\n          contextWrapper = _this$props2.contextWrapper,\n          additionalProps = _objectWithoutProperties(_this$props2, ['html', 'componentMap', 'componentAttribute', 'propsAttribute', 'contextWrapper']);\n\n      if (!componentProps) {\n        return additionalProps;\n      }\n\n      var props = void 0;\n\n      try {\n        props = JSON.parse(componentProps);\n      } catch (error) {\n        console.warn('Error parsing data-react-props', componentProps);\n      }\n\n      return _extends({}, props, additionalProps);\n    }, _this.renderToStaticMarkup = function () {\n      // We do not need to render to static markup on the client\n      if ((typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object') {\n        return null;\n      }\n\n      var ReactDOMServer = require('react-dom/server');\n\n      var cheerio = require('cheerio');\n\n      var _this$props3 = _this.props,\n          html = _this$props3.html,\n          componentAttribute = _this$props3.componentAttribute,\n          propsAttribute = _this$props3.propsAttribute,\n          componentProps = _this$props3.componentProps,\n          componentMap = _this$props3.componentMap,\n          contextWrapper = _this$props3.contextWrapper,\n          onServerRender = _this$props3.onServerRender; // parse the raw html with cheerio\n\n      var $ = cheerio.load(html);\n      $('[' + componentAttribute + ']').each(function (i, element) {\n        var component = componentMap[element.attribs[componentAttribute]];\n\n        var props = _this.parseStringProps(element.attribs[propsAttribute]);\n\n        var reactElement = React.createElement(component, props); // If context is required, this component must receive all applicable\n        // providers as a wrapper component through props.\n        // example: <ReactHTML contextWrapper={(props) => <StaticRouter {...props} />} />\n\n        if (contextWrapper) {\n          reactElement = React.createElement(contextWrapper, null, reactElement);\n        }\n\n        var reactHtml = ReactDOMServer.renderToStaticMarkup(reactElement); // replace the placeholder element with the rendered html\n\n        $(element).replaceWith(reactHtml);\n      });\n\n      if (onServerRender) {\n        onServerRender($);\n      }\n\n      return $('body').html();\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ReactHtml.prototype.componentDidMount = function componentDidMount() {\n    this.renderDom();\n  };\n\n  ReactHtml.prototype.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    if (this.props.html !== prevProps.html) {\n      this.renderDom();\n    }\n\n    if (this.state.isFirstRender && this.props.afterFirstRender) {\n      this.props.afterFirstRender();\n      this.setState({\n        isFirstRender: false\n      });\n    }\n  };\n\n  ReactHtml.prototype.componentWillUnmount = function componentWillUnmount() {\n    while (this.renderTarget.firstChild) {\n      this.renderTarget.removeChild(this.renderTarget.firstChild);\n    }\n  };\n\n  ReactHtml.prototype.render = function render() {\n    var _this2 = this;\n\n    var staticMarkup = this.renderToStaticMarkup();\n    var divProps = {};\n\n    if (staticMarkup) {\n      divProps.dangerouslySetInnerHTML = {\n        __html: staticMarkup\n      };\n    }\n\n    return React.createElement(React.Fragment, null, React.createElement('div', _extends({\n      ref: function ref(element) {\n        _this2.renderTarget = element;\n      }\n    }, divProps)), this.state.rendered);\n  };\n\n  return ReactHtml;\n}(React.PureComponent), _class.defaultProps = {\n  componentAttribute: 'data-react-component',\n  propsAttribute: 'data-react-props'\n}, _temp2);\nexport { ReactHtml as default };","map":null,"metadata":{},"sourceType":"module"}