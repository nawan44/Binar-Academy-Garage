{"ast":null,"code":"var React = require('react');\n\nvar HtmlToReact = new require('html-to-react');\nvar htmlInput = '<div><h1>Title</h1><p>Paragraph</p><h1>Another title</h1></div>';\nvar htmlExpected = '<div><h1>TITLE</h1><p>Paragraph</p><h1>ANOTHER TITLE</h1></div>';\n\nvar isValidNode = function isValidNode() {\n  return true;\n}; // Order matters. Instructions are processed in the order they're defined\n\n\nvar processNodeDefinitions = new HtmlToReact.ProcessNodeDefinitions(React);\nvar processingInstructions = [{\n  // Custom <h1> processing\n  shouldProcessNode: function shouldProcessNode(node) {\n    return node.parent && node.parent.name && node.parent.name === 'h1';\n  },\n  processNode: function processNode(node, children) {\n    return node.data.toUpperCase();\n  }\n}, {\n  // Anything else\n  shouldProcessNode: function shouldProcessNode(node) {\n    return true;\n  },\n  processNode: processNodeDefinitions.processDefaultNode\n}];\nvar htmlToReactParser = new HtmlToReact.Parser(React);\nvar reactComponent = htmlToReactParser.parseWithInstructions(htmlInput, isValidNode, processingInstructions);\nvar reactHtml = React.renderToStaticMarkup(reactComponent);","map":{"version":3,"sources":["/home/nawan44/Dokumen/binar/garage/src/components/MyComponent.js"],"names":["React","require","HtmlToReact","htmlInput","htmlExpected","isValidNode","processNodeDefinitions","ProcessNodeDefinitions","processingInstructions","shouldProcessNode","node","parent","name","processNode","children","data","toUpperCase","processDefaultNode","htmlToReactParser","Parser","reactComponent","parseWithInstructions","reactHtml","renderToStaticMarkup"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAIC,WAAW,GAAG,IAAID,OAAJ,CAAY,eAAZ,CAAlB;AAEA,IAAIE,SAAS,GAAG,iEAAhB;AACA,IAAIC,YAAY,GAAG,iEAAnB;;AAEA,IAAIC,WAAW,GAAG,SAAdA,WAAc,GAAW;AACzB,SAAO,IAAP;AACH,CAFD,C,CAIA;;;AACA,IAAIC,sBAAsB,GAAG,IAAIJ,WAAW,CAACK,sBAAhB,CAAuCP,KAAvC,CAA7B;AACA,IAAIQ,sBAAsB,GAAG,CACzB;AACI;AACAC,EAAAA,iBAAiB,EAAE,2BAASC,IAAT,EAAe;AAC9B,WAAOA,IAAI,CAACC,MAAL,IAAeD,IAAI,CAACC,MAAL,CAAYC,IAA3B,IAAmCF,IAAI,CAACC,MAAL,CAAYC,IAAZ,KAAqB,IAA/D;AACH,GAJL;AAKIC,EAAAA,WAAW,EAAE,qBAASH,IAAT,EAAeI,QAAf,EAAyB;AAClC,WAAOJ,IAAI,CAACK,IAAL,CAAUC,WAAV,EAAP;AACH;AAPL,CADyB,EAStB;AACC;AACAP,EAAAA,iBAAiB,EAAE,2BAASC,IAAT,EAAe;AAC9B,WAAO,IAAP;AACH,GAJF;AAKCG,EAAAA,WAAW,EAAEP,sBAAsB,CAACW;AALrC,CATsB,CAA7B;AAgBA,IAAIC,iBAAiB,GAAG,IAAIhB,WAAW,CAACiB,MAAhB,CAAuBnB,KAAvB,CAAxB;AACA,IAAIoB,cAAc,GAAGF,iBAAiB,CAACG,qBAAlB,CAAwClB,SAAxC,EAAmDE,WAAnD,EAAgEG,sBAAhE,CAArB;AACA,IAAIc,SAAS,GAAGtB,KAAK,CAACuB,oBAAN,CAA2BH,cAA3B,CAAhB","sourcesContent":["var React = require('react');\nvar HtmlToReact = new require('html-to-react');\n\nvar htmlInput = '<div><h1>Title</h1><p>Paragraph</p><h1>Another title</h1></div>';\nvar htmlExpected = '<div><h1>TITLE</h1><p>Paragraph</p><h1>ANOTHER TITLE</h1></div>';\n\nvar isValidNode = function() {\n    return true;\n};\n\n// Order matters. Instructions are processed in the order they're defined\nvar processNodeDefinitions = new HtmlToReact.ProcessNodeDefinitions(React);\nvar processingInstructions = [\n    {\n        // Custom <h1> processing\n        shouldProcessNode: function(node) {\n            return node.parent && node.parent.name && node.parent.name === 'h1';\n        },\n        processNode: function(node, children) {\n            return node.data.toUpperCase();\n        }\n    }, {\n        // Anything else\n        shouldProcessNode: function(node) {\n            return true;\n        },\n        processNode: processNodeDefinitions.processDefaultNode\n    }];\nvar htmlToReactParser = new HtmlToReact.Parser(React);\nvar reactComponent = htmlToReactParser.parseWithInstructions(htmlInput, isValidNode, processingInstructions);\nvar reactHtml = React.renderToStaticMarkup(reactComponent);"]},"metadata":{},"sourceType":"module"}